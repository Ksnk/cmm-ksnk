// Перезапись версии по выбору оператора
// работает для локального проключения
default := $20;
SetHashFile ('.\Hashes\MyHash.xml');
SetHashFile ('.\Hashes\Common.xml');
Client := GetTaskSocket>>8 ;

mod := 0 ; 
if Client >=$1e then 
  SetMask($B);SendMess($8000,$FF01,8,$6,$40);
  if recvmess(a,b,c,d,e,a1,a2,a3,a4) then mod := a4>>8 ;a1 := a1 && $ff fi ;
fi ;
if (mod =0)||(ForseChouseMod=1) then
  modx:=(evalasync('~user("Caption","номер модуля",300,200)')); 
  if (modx<>-1)&&(modx<>0) then mod := modx  ;
  SetMask($B);SendMess(mod*256,$FF01,8,$6,$40);
  if recvmess(a,b,c,d,e,a1,a2,a3,a4) then mod := a4>>8 ;a1 := a1 && $ff else mod := 0 fi ;
  fi ;
fi;
if (mod =0)||(mod=-1) then 
    if default=0 then
		goto fin
	else
	  mod := default;
	fi;  
  fi ;

SetMask(19);
SendMess(Mod*256,$FF01);
if recvmess(a,b,c,d,e,type)>0 then
  type := type && $FF;
  write('found mod ',mod,' type ', type);
else
  writeln('No module found! Sorry pal!', mod); goto fin;
fi ;
variant := 3 ;
include code.inc ;
setmask($b);SendMess(mod*256,$ff01,2,2,0); recvmess(a,b,c,d,e,SEG);
writeln;
if type=34 then
startArea := $1000;
else
startArea := $d00;//$2000 ;
fi;
//startArea := $9800; {//

if SEG < $1f00 then 
writeln('рестартуем ОС');
SetMask($10); SendMess(Mod*256,$FF01,0,0,$ffff);
delay(3000);
fi ;
// }

//------------------------------------------
// заказываем трассу в следующей жизни - вписываем ее за 3 параграфа от настоящего образа!
AtSeg := $400;
         SetMask($d);  SendMess(mod*256,$ff01,$30,0,startArea-3,$1234,AtSeg
                           ,1,$180
                           ,$40,$100
                           ,$c0,$200
                           ,$1b0,$1000
                           ,$31f4,$100
                           ,$3400,$2000
                           ,0,0
                           ,0,0
                           ,0,0
                           ,0,0,0,0
                       );
         RecvMess(t1,t2,t3,t4,t5,A2);
//------------------------------------------
defcnt := oscnt ;
//startArea := $300;
//if vcnt>1 then
  variant := 0 ;
  include code.inc ;
//fi ;
if oscnt = -1 then if vcnt=1 then oscnt := defcnt; else  goto fin fi; fi;

variant := 1 ;
include code.inc ;

justload:

SetMask($F);SendMess ($FF+(256*Mod),$aa0c,OS_SIZE*$10,0,StartArea,1);
wait_some_crc0:
if RecvMess (a,b,CRC_1,d)>0 then
  if b <> $AA0c then goto wait_some_crc0 fi ;
else writeln('CRC не удалось получить'); goto fin;
fi ;

if CRC_1 <> OS_CRC then

variant := 2 ;
include code.inc ;
else
  writeln('Образ уже загружен');
fi ;


SetMask($F);SendMess ($FF+(256*Mod),$aa0c,OS_SIZE*$10,0,StartArea,1);
wait_some_crc:
if RecvMess (a,b,CRC_1,d)>0 then
  if b <> $AA0c then goto wait_some_crc fi ;
else writeln('CRC не удалось получить'); goto fin;
fi ;

if CRC_1 <> OS_CRC then
   writeln('CRC error while loading image... again');//goto justload;
else
   writeln('CRC Ok !!!');
fi ;
//------------------- примерные действия
// обнуляем возможный запрос на трассу
// рестартуем
// копируем заказанный кусок в память по нужному адресу - трасса заказана
// после рестарта имеем трассу

SendMess((Mod*256)+$ff,$AA51,0               //!! 
        ,$30,0,$100,$aaaa,$5507              //!! WRMEM($30:0,$aaaa);
        ,$100,StartArea,0,$5502              //!! Goto(<StartArea>:0);
        ,$100,StartArea-3,0,$30,0,$30,$5500  //!! Copymem(<StartArea-3>:0,$30:0,$30)
        ,$100,4444,$100,$80ff,$1,$5506       //!! Send($80ff,4444);
        ,$FFFF);                             //!! 
SendMess((Mod*256)+$ff,$AA52,0);             //!! 
// ------------------------------------

writeln('Let''s look at ',StartArea);

Delay(3000);


fin:



